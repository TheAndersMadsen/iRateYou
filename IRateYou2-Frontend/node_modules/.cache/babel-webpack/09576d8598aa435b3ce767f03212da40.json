{"ast":null,"code":"import _asyncToGenerator from \"/home/dp/Documents/School/vscodeschool/iRateYou/IRateYou2-Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = \"https://localhost:44321/api/User\";\n  }\n\n  GetAllUsers() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get(_this.baseURL).toPromise();\n    })();\n  }\n\n  GetUserById(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this2.http.get(_this2.baseURL + '/' + id).toPromise();\n    })();\n  }\n\n  AddUser(user) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this3.http.post(_this3.baseURL, user).toPromise();\n    })();\n  }\n\n  DeleteUser(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this4.http.delete(_this4.baseURL + '/' + id).toPromise();\n    })();\n  }\n\n  UpdateUser(user) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this5.http.put(_this5.baseURL + '/' + user.id, user).toPromise();\n    })();\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/dp/Documents/School/vscodeschool/iRateYou/IRateYou2-Frontend/src/app/shared/states/user/user.service.ts"],"names":["i0","i1","UserService","constructor","http","baseURL","GetAllUsers","get","toPromise","GetUserById","id","AddUser","user","post","DeleteUser","delete","UpdateUser","put","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAe,kCAAf;AACH;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,mBAAa,KAAI,CAACF,IAAL,CAAUG,GAAV,CAAc,KAAI,CAACF,OAAnB,EAA4BG,SAA5B,EAAb;AADgB;AAEnB;;AACKC,EAAAA,WAAW,CAACC,EAAD,EAAK;AAAA;;AAAA;AAClB,mBAAa,MAAI,CAACN,IAAL,CAAUG,GAAV,CAAc,MAAI,CAACF,OAAL,GAAe,GAAf,GAAqBK,EAAnC,EAAuCF,SAAvC,EAAb;AADkB;AAErB;;AACKG,EAAAA,OAAO,CAACC,IAAD,EAAO;AAAA;;AAAA;AAChB,mBAAa,MAAI,CAACR,IAAL,CAAUS,IAAV,CAAe,MAAI,CAACR,OAApB,EAA6BO,IAA7B,EAAmCJ,SAAnC,EAAb;AADgB;AAEnB;;AACKM,EAAAA,UAAU,CAACJ,EAAD,EAAK;AAAA;;AAAA;AACjB,mBAAa,MAAI,CAACN,IAAL,CAAUW,MAAV,CAAiB,MAAI,CAACV,OAAL,GAAe,GAAf,GAAqBK,EAAtC,EAA0CF,SAA1C,EAAb;AADiB;AAEpB;;AACKQ,EAAAA,UAAU,CAACJ,IAAD,EAAO;AAAA;;AAAA;AACnB,mBAAa,MAAI,CAACR,IAAL,CAAUa,GAAV,CAAc,MAAI,CAACZ,OAAL,GAAe,GAAf,GAAqBO,IAAI,CAACF,EAAxC,EAA4CE,IAA5C,EAAkDJ,SAAlD,EAAb;AADmB;AAEtB;;AAnBoB;;AAqBzBN,WAAW,CAACgB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,WAAV,EAAuBF,EAAE,CAACqB,QAAH,CAAYpB,EAAE,CAACqB,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACApB,WAAW,CAACqB,KAAZ,GAAoB,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEvB,WAAT;AAAsBwB,EAAAA,OAAO,EAAExB,WAAW,CAACgB,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n    constructor(http) {\n        this.http = http;\n        this.baseURL = \"https://localhost:44321/api/User\";\n    }\n    async GetAllUsers() {\n        return await this.http.get(this.baseURL).toPromise();\n    }\n    async GetUserById(id) {\n        return await this.http.get(this.baseURL + '/' + id).toPromise();\n    }\n    async AddUser(user) {\n        return await this.http.post(this.baseURL, user).toPromise();\n    }\n    async DeleteUser(id) {\n        return await this.http.delete(this.baseURL + '/' + id).toPromise();\n    }\n    async UpdateUser(user) {\n        return await this.http.put(this.baseURL + '/' + user.id, user).toPromise();\n    }\n}\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient)); };\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}